$Id: TODO,v 1.19 2004-03-11 16:19:24 joostvb Exp $

-- docbook stuff --

get toc printed in html mode. even while using nochunks mode.

license should be printed, see rh vs deb doc

--- mk stuff ---

- this whole thing could probably better use rsync, or, alternatively, all
  caspar functionality should be incorporated in cfengine, a tool for
  configuring and maintaining network machines.

- add support for sudo, rsync, install(1)

- a lot of features are still undocumented

- convert README to pod or dbx

- add big example

- The function $(subst -install,,$@) in caspar.mk breaks when filename itself
has the substring -install.  We might have to use sed here, and strip only
a _trailing_ '-install' from the maketarget.

- Add a better hook for the -load target: more generic please.

- The scp invocation is inefficient:

   % make -n README.txt-install beheersnet.txt-install
   scp "README.txt" pong:/data/www/doc/doc/;
   scp "beheersnet.txt" pong:/data/www/doc/doc/;

  Should be:

   scp "README.txt" "beheersnet.txt" pong:/data/www/doc/doc/;

  $@ vs $? might be helpful.

- contact adress for bugrapports missing in docs.

- Add our implicit pattern rules to built-in implicit rules?  When no
  ./Makefile exists, but ./foo.c does, make knows what to do when asked to
  ``make foo''.  Furthermore, in absence of ./Makefile,
  ``TEX=latex make blah.dvi'' does something sane with blah.tex.

  It'd be cool if we could add to Make's built-in implicit rules, and have our
  implicit rules work, even if no Makefile exists in the current directory.
  However, I don't think this is possible with current (3.80-6) Make.  The
  built-in implicit rules are compiled in make binary, so adding the caspar
  ones to some magic directory will likely not work.

- Create a ``load-recursive'' target.

