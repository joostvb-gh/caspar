$Id: README,v 1.11 2003-05-17 11:18:33 joostvb Exp $

caspar - Makefile snippets for common tasks

- caspar? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

caspar is named after Caspar the Friendly Ghost, since that's the title
of the Daniel Johnston song I was listening to when deciding to package
my homegrown scripts.

Caspar offers Makefile snippets for common tasks, like installing stuff you've
got under version control, or typesetting LaTeX, DocBook XML and DocBook SGML
documents.

The typesetting functionality is delivered by docbook.mk and pod.mk.  This is
not yet fully documented.  Some comments on usage are in docbook.mk and pod.mk
itself though.

The installing-stuff-under-version-control functionality is delivered by
caspar.mk.  (That's what the rest of the README will talk about.)  It enables
one to run 'make install' from within a CVS tree.

Its useful in cases like this: all configuration files of some host are under
version control, and, after commiting a change to CVS, you want to be able to
easily install the new config file on the host.

With caspar, all you have to do is specify the hostname in one place, and
specify the name of the target directory in each CVS directory.

After install, /usr/local/share/doc/caspar will be created and filled, a file
/usr/local/share/caspar/mk/caspar.mk will get installed, and a symlink
/usr/local/include/caspar/mk/caspar.mk will get created.

- requirements, packages  - - - - - - - - - - - - - - - - - - - - - - - - -

GNU make.

A Debian package (for e.g. Debian GNU/Linux) is available from `deb
http://mdcc.cx/debian local contrib'.

- usage - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Within a CVS tree, create a file include/install.mk, with contents like e.g.

 SUH = root@some.host.somewhere
 include caspar/mk/caspar.mk

.  Within each other directory of the CVS tree which holds files, create a
Makefile, which looks like e.g.

 DIR = /some/dir/ectory
 include ../../include/install.mk

.

The variables one can set in a calling Makefile are: SUH (ssh-reachable
user@host), SDIR (directory on ssh reachable host), CDIR (directory to which we
can copy(1), instead of scp), LOAD (targets which should depend on the `load'
target).

From within the CVS tree, one can call:

  make <filename>-install
  make install
  make load
  make

Some examples:

Using CDIR and LOAD

 username/etc/Makefile is

  CDIR = $(HOME)/etc
  LOAD = crontab-load
  include ../include/install.mk

  crontab-load:
        crontab $(CDIR)/crontab

 while ../include/install.mk is just

  include caspar/mk/caspar.mk

Using SDIR and LOAD:

 etc/Makefile is

  SDIR = /etc
  LOAD = aliases-load
  include ../include/install.mk

  aliases-load:
      ssh $(SUH) "cd /etc; postalias aliases; postfix reload"

 while ../include/install.mk is

  SUH = root@some.host.somewhere
  include caspar/mk/caspar.mk


More advanced tricks: supply e.g.

 SUHS = root@localhost root@some.host.somewhere

in install.mk, to install on multiple hosts.

Run

 SUH=joe@otherhost make filename-install

to install filename as joe@otherhost, instead of the default as given in
install.mk.

When you don't want to ssh to root@some.host.somewhere directly, you could
do

 sudo rsync -az /path/to/your/config_archive /etc

.

- gimme some of the stuff you've been smoking!  - - - - - - - - - - - - - - - -

"What've you been smoking!?  A completely fullblown autoconfiscated tarball for
just a eeny weeny Makefile snippet!?  I'm not gonna install that!  No way!"

Well, there's no accounting for taste...  If I use the same files on many
hosts, I prefer to install them from a tarball.  If you were asked to work with
a caspar-ized CVS tree, you can work around installing the tarball by doing
something like this:

 cd ~/cvs/kingkong/include

kingkong is a CVS module, holding files which should get installed on host
kingkong.

Create a file install.mk there, which looks like

 SUH = admin@kingkong.example.org
 include caspar/mk/caspar.mk

Now, do

 echo caspar >> .cvsignore
 mkdir -p caspar/mk

and copy caspar.mk to the just created directory caspar/mk/ .


- some thoughts - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

The default GNU make include path is .:PREFIX/include:/usr/gnu/include:
/usr/local/include:/usr/include .  See make.info, node `Include'.  FHS however
says: '/usr/include [...] is where all of the system's general-use include
files for the C and C++ programming languages should be placed.'  This makes
GNU make somewhat incompatible with the FHS :( .  GNU make could better use
something like '/usr/share/mk' in its default include path.

We work around this by creating the following symlink when being 'make
install'-ed:

 /usr/local/include/caspar/mk/caspar.mk ->
                                    /usr/local/share/caspar/mk/caspar.mk

.

The enables us to be able to call

 include caspar/mk/caspar.mk

from a Makefile.

- more info, similar packages - - - - - - - - - - - - - - - - - - - - - - - - -

The caspar homepage is at http://mdcc.cx/pub/caspar/ .

The `cvs-conf' package probably offers about the same functionality.

docbookmk, by Michael Wiedmann ( http://www.miwie.org/docbkmake/ ) offers
probably a superset of Caspar's docbook.mk functionality.


